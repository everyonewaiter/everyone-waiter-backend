name: Deploy To OCI

on:
  push:
    branches:
      - feature/#29

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Github Repository
        uses: actions/checkout@v4

      - name: Install JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup application.properties
        run: |
          rm -rf ./src/main/resources/application.properties
          rm -rf ./src/main/resources/application-dev.properties
          echo "${{ secrets.DEV_ROOT_APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
          echo "${{ secrets.DEV_APPLICATION_PROPERTIES }}" > ./src/main/resources/application-dev.properties

      - name: Gradle Build
        run: ./gradlew clean build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Release to Docker Hub
        run: |
          docker build -t ${{ vars.DOCKERHUB_REPOSITORY_NAME }}:development .
          docker tag ${{ vars.DOCKERHUB_REPOSITORY_NAME }}:development ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY_NAME }}:development
          docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY_NAME }}:development

      - name: OCI Bastion Session Create
        id: bastion
        uses: domenikk/oci-bastion-action@v1
        with:
          oci-user: ${{ secrets.OCI_CLI_USER }}
          oci-tenancy: ${{ secrets.OCI_CLI_TENANCY }}
          oci-fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
          oci-key-content: ${{ secrets.OCI_CLI_KEY_CONTENT }}
          oci-region: ${{ secrets.OCI_CLI_REGION }}
          bastion-id: ${{ secrets.OCI_BASTION_ID }}
          public-key: ${{ secrets.OCI_INSTANCE_PUBLIC_KEY }}
          session-type: 'PORT_FORWARDING'
          target-resource-id: ${{ secrets.OCI_INSTANCE_ID }}
          target-resource-port: 22

      - name: Copy OCI Instance SSH Private Key
        run: |
          echo "${{ secrets.OCI_INSTANCE_PRIVATE_KEY }}" > ./oci_instance_ssh.key
          chmod 600 ./oci_instance_ssh.key

      - name: Setup SSH Tunnel
        run: |
          ssh -i ./oci_instance_ssh.key -N -L 6000:${{ secrets.OCI_INSTANCE_PRIVATE_IP }}:22 -p 22 ${{ steps.bastion.outputs.session-id }}@${{ secrets.OCI_BASTION_PUBLIC_IP }} &

      - name: Connect SSH & Deploy
        run: |
          ssh -i ./oci_instance_ssh.key -p 6000 ubuntu@localhost
          echo "Connected OCI"
          pwd

      - name: Cleanup SSH
        if: always()
        run: |
          pkill ssh || true
